{% extends 'base_admin.html.twig' %}

{% block title %}Ajouter un Équipement{% endblock %}

{% block content %}
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

    <style>
        body { background-color: #f8f9fa; }
        .card { border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); }
        .form-control, .form-control-file { border-radius: 5px; border: 1px solid #ced4da; }
        .form-control:focus, .form-control-file:focus { border-color: #5c6bc0; box-shadow: 0 0 5px rgba(92, 107, 192, 0.3); }
        .btn-primary { background-color: #5c6bc0; border-color: #5c6bc0; border-radius: 5px; }
        .btn-primary:hover { background-color: #4a5aa8; border-color: #4a5aa8; }
        .btn-secondary { background-color: #e0e0e0; border-color: #e0e0e0; color: #333; border-radius: 5px; }
        .btn-secondary:hover { background-color: #d0d0d0; border-color: #d0d0d0; }
        .btn-ai { background-color: #28a745; border-color: #28a745; color: white; border-radius: 5px; }
        .btn-ai:hover { background-color: #218838; border-color: #218838; }
        label { font-weight: 500; color: #333; }
        .custom-file-upload { display: flex; align-items: center; gap: 10px; }
        .custom-file-upload input[type="file"] { display: none; }
        .custom-file-upload label { background-color: #5c6bc0; color: white; padding: 8px 16px; border-radius: 5px; cursor: pointer; font-size: 14px; }
        .custom-file-upload label:hover { background-color: #4a5aa8; }
        .custom-file-upload .reset-btn { background-color: #e0e0e0; color: #333; padding: 8px 16px; border-radius: 5px; cursor: pointer; font-size: 14px; }
        .custom-file-upload .reset-btn:hover { background-color: #d0d0d0; }
        .file-info { font-size: 12px; color: #666; margin-top: 5px; }
        .image-preview { width: 100px; height: 100px; border-radius: 50%; background-color: #e0e0e0; display: flex; align-items: center; justify-content: center; overflow: hidden; margin-right: 15px; }
        .image-preview img { width: 100%; height: 100%; object-fit: cover; }
        .image-section { display: flex; align-items: center; }
        .invalid-feedback {
            color: red;
            font-size: 0.875em;
            margin-top: 0.25rem;
        }
        .is-invalid {
            border-color: red !important;
        }
        .error-message {
            color: red;
            font-size: 12px;
            margin-top: 5px;
        }
    </style>

    <div class="container mt-5">
        <div class="card p-4">
            <h2 class="mb-4">Ajouter un Équipement</h2>
            {{ form_start(form, {'attr': {'enctype': 'multipart/form-data', 'novalidate': 'novalidate'}}) }}
                <div class="mb-3">
                    <label>Image de l'équipement</label>
                    <div class="image-section">
                        <div class="image-preview" id="imagePreview">
                            <img id="previewImage" src="#" alt="Image Preview" style="display: none;">
                        </div>
                        <div class="custom-file-upload">
                            {{ form_widget(form.image) }}
                            <label for="{{ form.image.vars.id }}">Choisir une image</label>
                            <span class="reset-btn" onclick="resetImage()">RESET</span>
                        </div>
                    </div>
                    <div class="error-message">{{ form_errors(form.image) }}</div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            {{ form_label(form.nom) }}
                            {{ form_widget(form.nom, {'attr': {'class': 'form-control' ~ (form.nom.vars.valid ? '' : ' is-invalid')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.nom) }}
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            {{ form_label(form.marque) }}
                            {{ form_widget(form.marque, {'attr': {'class': 'form-control' ~ (form.marque.vars.valid ? '' : ' is-invalid')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.marque) }}
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            {{ form_label(form.reference) }}
                            {{ form_widget(form.reference, {'attr': {'class': 'form-control' ~ (form.reference.vars.valid ? '' : ' is-invalid')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.reference) }}
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            {{ form_label(form.quantite) }}
                            {{ form_widget(form.quantite, {'attr': {'class': 'form-control' ~ (form.quantite.vars.valid ? '' : ' is-invalid')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.quantite) }}
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            {{ form_label(form.prixvente) }}
                            {{ form_widget(form.prixvente, {'attr': {'class': 'form-control' ~ (form.prixvente.vars.valid ? '' : ' is-invalid')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.prixvente) }}
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 mb-3">
                        <div class="form-group">
                            {{ form_label(form.description) }}
                            {{ form_widget(form.description, {'attr': {'class': 'form-control' ~ (form.description.vars.valid ? '' : ' is-invalid')}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.description) }}
                            </div>
                            <button type="button" class="btn btn-ai mt-2" onclick="generateDescription()">
                                <i class="fas fa-magic mr-2"></i> Générer avec IA
                            </button>
                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-plus-circle mr-2"></i> Ajouter l'équipement
                    </button>
                    <a href="{{ path('app_equipements') }}" class="btn btn-secondary ml-2">Annuler</a>
                </div>
            {{ form_end(form) }}
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        // Image preview
        document.getElementById('{{ form.image.vars.id }}').addEventListener('change', function(event) {
            const file = event.target.files[0];
            const previewImage = document.getElementById('previewImage');
            const imagePreview = document.getElementById('imagePreview');

            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    previewImage.src = e.target.result;
                    previewImage.style.display = 'block';
                    imagePreview.style.backgroundColor = 'transparent';
                };
                reader.readAsDataURL(file);
            }
        });

        function resetImage() {
            const previewImage = document.getElementById('previewImage');
            const imagePreview = document.getElementById('imagePreview');
            document.getElementById('{{ form.image.vars.id }}').value = '';
            previewImage.src = '#';
            previewImage.style.display = 'none';
            imagePreview.style.backgroundColor = '#e0e0e0';
        }

        // Generate description with AI
        function generateDescription() {
            const nom = document.getElementById('{{ form.nom.vars.id }}').value;
            const marque = document.getElementById('{{ form.marque.vars.id }}').value;
            const descriptionField = document.getElementById('{{ form.description.vars.id }}');

            if (!nom || !marque) {
                alert('Veuillez remplir les champs Nom et Marque avant de générer une description.');
                return;
            }

            // Show loading state
            const generateButton = document.querySelector('.btn-ai');
            generateButton.disabled = true;
            generateButton.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i> Génération...';

            // Make AJAX request to backend
            $.ajax({
                url: '/generate-description', // Backend endpoint
                method: 'POST',
                data: JSON.stringify({ nom, marque }),
                contentType: 'application/json',
                success: function(response) {
                    if (response.description) {
                        descriptionField.value = response.description;
                    } else {
                        alert('Erreur lors de la génération de la description.');
                    }
                },
                error: function() {
                    alert('Erreur lors de la communication avec le serveur.');
                },
                complete: function() {
                    // Reset button state
                    generateButton.disabled = false;
                    generateButton.innerHTML = '<i class="fas fa-magic mr-2"></i> Générer avec IA';
                }
            });
        }
    </script>
{% endblock %}