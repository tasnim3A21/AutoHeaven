{% extends 'base.html.twig' %}

{% block title %}Reclamation{% endblock %}

{% block content %}
    <div class="reclamation-container">
        <h1>Passer une réclamation</h1>

        {{ form_start(reclamationForm, {'attr': {'id': 'reclamationForm'}}) }}
            <div class="form-group">
                {{ form_label(reclamationForm.titre, 'Objet', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(reclamationForm.titre) }}
                {{ form_errors(reclamationForm.titre) }}
            </div>

            <div class="form-group">
                {{ form_label(reclamationForm.contenu, 'Votre réclamation', {'label_attr': {'class': 'form-label'}}) }}
                <div class="textarea-container">
                    {{ form_widget(reclamationForm.contenu) }}
                    <label for="form_imageFile" class="image-upload-label">
                        <img src="{{ asset('images/img.png') }}" alt="Joindre une image" class="image-upload-icon">
                    </label>
                    {{ form_widget(reclamationForm.imageFile, {'attr': {'id': 'form_imageFile'}}) }}
                </div>
                {{ form_errors(reclamationForm.contenu) }}
                {{ form_errors(reclamationForm.imageFile) }}
                <span id="imageFileName" class="image-file-name"></span>
            </div>

            <div class="button-container">
                <button type="submit" class="btn-submit">Envoyer</button>
            </div>
        {{ form_end(reclamationForm) }}

        <!-- Message de confirmation -->
        <div id="successMessage" class="success-message" style="display: none;">
            Réclamation envoyée avec succès !
        </div>
        <div id="errorMessage" class="error-message" style="display: none;">
            Une erreur est survenue.
        </div>
    </div>

    <style>
        /* Conteneur principal */
        .reclamation-container {
            max-width: 600px;
            margin: 40px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        /* Titre */
        h1 {
            font-size: 24px;
            font-weight: 600;
            color: #333;
            text-align: center;
            margin-bottom: 30px;
        }

        /* Groupe de formulaire */
        .form-group {
            margin-bottom: 20px;
        }

        /* Labels */
        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
            font-size: 14px;
            text-transform: uppercase;
        }

        /* Champs de saisie */
        .form-input,
        .form-textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 14px;
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }

        .form-textarea {
            resize: vertical;
            min-height: 100px;
            padding-right: 50px; /* Laisser plus d'espace pour l'icône agrandie */
        }

        .form-input:focus,
        .form-textarea:focus {
            border-color: #dc3545;
            box-shadow: 0 0 5px rgba(220, 53, 69, 0.3);
            outline: none;
        }

        /* Conteneur pour le textarea et l'icône */
        .textarea-container {
            position: relative;
            display: inline-block;
            width: 100%;
        }

        .image-upload-label {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
        }

        .image-upload-icon {
            width: 32px; /* Agrandir l'icône */
            height: 32px;
            vertical-align: middle;
        }

        .image-file-name {
            display: block;
            margin-top: 5px;
            font-size: 14px;
            color: #666;
        }

        /* Cacher le champ input file */
        input[type="file"] {
            display: none;
        }

        /* Erreurs */
        .form-errors {
            color: #dc3545;
            font-size: 12px;
            margin-top: 5px;
        }

        /* Conteneur du bouton */
        .button-container {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        /* Bouton Envoyer */
        .btn-submit {
            background-color: #dc3545;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .btn-submit:hover {
            background-color: #c82333;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .btn-submit:disabled {
            background-color: #ccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        /* Masquer le bouton gris par défaut ajouté par Symfony */
        button[type="submit"]:not(.btn-submit) {
            display: none !important;
        }

        /* Message de confirmation */
        .success-message {
            text-align: center;
            color: #28a745;
            font-size: 14px;
            margin-top: 20px;
            padding: 10px;
            background-color: #e9f7ef;
            border-radius: 4px;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .success-message.show {
            opacity: 1;
        }

        /* Message d'erreur */
        .error-message {
            text-align: center;
            color: #dc3545;
            font-size: 14px;
            margin-top: 20px;
            padding: 10px;
            background-color: #f8d7da;
            border-radius: 4px;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .error-message.show {
            opacity: 1;
        }

        /* Responsive */
        @media screen and (max-width: 768px) {
            .reclamation-container {
                margin: 20px;
                padding: 15px;
            }

            h1 {
                font-size: 20px;
            }

            .form-input,
            .form-textarea {
                font-size: 13px;
            }

            .btn-submit {
                font-size: 13px;
                padding: 8px 16px;
            }
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('reclamationForm');
            const titreInput = form.querySelector('input[name="form[titre]"]');
            const contenuInput = form.querySelector('textarea[name="form[contenu]"]');
            const imageFileInput = form.querySelector('#form_imageFile');
            const imageFileName = form.querySelector('#imageFileName');
            const imageUploadLabel = form.querySelector('.image-upload-label');
            const submitButton = form.querySelector('.btn-submit');
            const successMessage = document.getElementById('successMessage');
            const errorMessage = document.getElementById('errorMessage');

            // Ajouter un événement de débogage pour vérifier si le clic sur l'icône est détecté
            imageUploadLabel.addEventListener('click', function () {
                console.log('Icône cliquée, déclenchement de l\'input file...');
                imageFileInput.click(); // Forcer l'ouverture de la fenêtre de sélection
            });

            // Afficher le nom du fichier sélectionné
            imageFileInput.addEventListener('change', function () {
                console.log('Fichier sélectionné :', this.files);
                if (this.files.length > 0) {
                    imageFileName.textContent = this.files[0].name;
                } else {
                    imageFileName.textContent = '';
                }
            });

            // Validation côté client et soumission
            form.addEventListener('submit', function (e) {
                e.preventDefault(); // Empêcher la soumission par défaut

                let hasError = false;

                // Réinitialiser les messages d'erreur
                const existingErrors = form.querySelectorAll('.form-error');
                existingErrors.forEach(error => error.remove());

                // Vérifier le champ "Objet"
                if (!titreInput.value.trim()) {
                    hasError = true;
                    const error = document.createElement('div');
                    error.className = 'form-error';
                    error.style.color = '#dc3545';
                    error.style.fontSize = '12px';
                    error.style.marginTop = '5px';
                    error.textContent = 'Le champ Objet est requis.';
                    titreInput.parentNode.appendChild(error);
                }

                // Vérifier le champ "Votre réclamation"
                if (!contenuInput.value.trim()) {
                    hasError = true;
                    const error = document.createElement('div');
                    error.className = 'form-error';
                    error.style.color = '#dc3545';
                    error.style.fontSize = '12px';
                    error.style.marginTop = '5px';
                    error.textContent = 'Le champ Votre réclamation est requis.';
                    contenuInput.parentNode.appendChild(error);
                }

                if (hasError) {
                    return;
                }

                // Désactiver le bouton pendant la soumission
                submitButton.disabled = true;
                submitButton.textContent = 'Envoi en cours...';

                // Soumettre le formulaire via fetch
                fetch(form.action, {
                    method: form.method,
                    body: new FormData(form),
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (!data.success) {
                        throw new Error(data.message || 'Erreur lors de l\'envoi de la réclamation.');
                    }

                    // Afficher le message de confirmation
                    successMessage.style.display = 'block';
                    successMessage.classList.add('show');

                    // Réinitialiser le formulaire
                    form.reset();
                    imageFileName.textContent = ''; // Réinitialiser le nom du fichier

                    // Réactiver le bouton
                    submitButton.disabled = false;
                    submitButton.textContent = 'Envoyer';

                    // Cacher le message après 3 secondes
                    setTimeout(() => {
                        successMessage.classList.remove('show');
                        setTimeout(() => {
                            successMessage.style.display = 'none';
                        }, 300);
                    }, 3000);
                })
                .catch(error => {
                    console.error('Erreur lors de la soumission :', error);
                    errorMessage.textContent = error.message || 'Une erreur est survenue lors de l\'envoi de la réclamation.';
                    errorMessage.style.display = 'block';
                    errorMessage.classList.add('show');
                    submitButton.disabled = false;
                    submitButton.textContent = 'Envoyer';

                    // Cacher le message d'erreur après 3 secondes
                    setTimeout(() => {
                        errorMessage.classList.remove('show');
                        setTimeout(() => {
                            errorMessage.style.display = 'none';
                        }, 300);
                    }, 3000);
                });
            });
        });
    </script>
{% endblock %}